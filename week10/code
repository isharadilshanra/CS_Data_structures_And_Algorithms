#include <iostream>
#include <list>
using namespace std;

struct Node {
    int label;
    list<int> neighbours;
};

struct Graph {
    int n = 8;
    Node* nodes = new Node[n];

    void intializenodes() {
        for (int i = 0; i < n; i++) {
            nodes[i].label = i;
        }
    }

    void addedge(int u, int v) {
        // Add v to the neighbour list of u
        nodes[u-1].neighbours.push_back(v-1);

        // Add u to the neighbour list of v
        nodes[v-1].neighbours.push_back(u-1);
    }

    void print() {
        for (int i = 0; i < n; i++) {
            cout << "node " << i << ": ";
            for (int neighbour : nodes[i].neighbours) {
                cout << neighbour << " ";
            }
            cout << endl;
        }
    }
};

int main() {
    Graph* g = new Graph;
    g->intializenodes();
    // Add edges for the graph here.
    g->addedge(1,2);
    g->addedge(1,4);
    g->addedge(1,3);
    g->addedge(1,5);
    g->addedge(2,3);
    g->addedge(2,6);
    g->addedge(4,7);
    g->addedge(4,6);
    g->addedge(4,8);
    g->addedge(5,7);
    g->addedge(5,8);
    g->addedge(5,6);
    // Print the graph adjacency list
    g->print();

    delete g; 
    return 0;
}
